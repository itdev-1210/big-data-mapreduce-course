<!DOCTYPE html>
<html class="no-js" lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="profile" href="http://gmpg.org/xfn/11">
	<link rel="pingback" href="https://highlyscalable.wordpress.com/xmlrpc.php">
	<script>(function(html){html.className = html.className.replace(/\bno-js\b/,'js')})(document.documentElement);</script>
<title>MapReduce Patterns, Algorithms, and Use Cases &#8211; Highly Scalable Blog</title>
<link rel='dns-prefetch' href='//s2.wp.com' />
<link rel='dns-prefetch' href='//s1.wp.com' />
<link rel='dns-prefetch' href='//s0.wp.com' />
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel="alternate" type="application/rss+xml" title="Highly Scalable Blog &raquo; Feed" href="https://highlyscalable.wordpress.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Highly Scalable Blog &raquo; Comments Feed" href="https://highlyscalable.wordpress.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Highly Scalable Blog &raquo; MapReduce Patterns, Algorithms, and Use&nbsp;Cases Comments Feed" href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/feed/" />
	<script type="text/javascript">
		/* <![CDATA[ */
		function addLoadEvent(func) {
			var oldonload = window.onload;
			if (typeof window.onload != 'function') {
				window.onload = func;
			} else {
				window.onload = function () {
					oldonload();
					func();
				}
			}
		}
		/* ]]> */
	</script>
			<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/72x72\/","ext":".png","svgUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/s1.wp.com\/wp-includes\/js\/wp-emoji-release.min.js?m=1496863874h&ver=4.8-RC2-40878"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b===c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='all-css-0-1' href='https://s0.wp.com/_static/??-eJyNkVFuAyEMRC9Uaq3UpslH1bOwYBESGxD2apPbh002qpS0KD9oDPM8loG5GJeTYlLgyRSaQkwCc3GZjXAkPD9U707kDf7GKB5R4IBarDuaa/VkHymH35xcvfUCgfJoqde6IllFb0oWfah6mMsV2z0Xq4uD0UeLhNxsPWyOPmDLaZZVG8VTF+GyuQctct820J3sttRxLBVFTDs5Tmx032brcgET1tge/pFP7K0lrAmQ8oxEIHomfNFrRe7LWP92AX/4e/jYbbZfw/ZzOFwAsNXc/w==' type='text/css' media='all' />
<link rel='stylesheet' id='nowell-fonts-css'  href='https://fonts.googleapis.com/css?family=Open+Sans%3A300italic%2C400italic%2C700italic%2C400%2C300%2C700&#038;subset=latin&#038;ver=4.8-RC2-40878' type='text/css' media='all' />
<link rel='stylesheet' id='all-css-2-1' href='https://s2.wp.com/_static/??-eJx9i8sKgCAQAH8oWwSjOkTfYmLLhrrig34/u0Rdus3ADBAELmQ45Ad6k3MHZxRNig0FfBXRVaTWoGXh2OhCHD4idqcp/a3Jbo6xIUKrXnpPq1+kGmalplGq4wKxyTcd' type='text/css' media='all' />
<link rel='stylesheet' id='print-css-3-1' href='https://s0.wp.com/wp-content/mu-plugins/global-print/global-print.css?m=1465851035h' type='text/css' media='print' />
<link rel='stylesheet' id='all-css-4-1' href='https://s2.wp.com/_static/??-eJx9i9EKwjAMRX/IGoVN54P4LVnp2kialCbD3xcfRGTi0z0XzoFHC1HFkzjUNTReM4kBRieVGfuH9tFsB7/1puZhYaQOVrCT5Pf+q0wjIQfWrN9nE3lJNRmUATLrjPwSbvV6HC6H83Qap/H+BMWZScE=' type='text/css' media='all' />
<script type='text/javascript'>
/* <![CDATA[ */
var related_posts_js_options = {"post_heading":"h4"};
/* ]]> */
</script>
<script type='text/javascript' src='https://s1.wp.com/_static/??-eJyFj90KwjAMhV/IrAw6xQvxWWoXS2r/bNoNfXo70At1KARCTr4cTsScgIJ2dUQWttW1Yr49W2d5I34B4MlkVbDzFF6wjqFgKAvr44kcQmXMyjStGZ3jCpciF4/MDVrZvkeiMBHOfzGLJSl9gYxM9y9XXyG5aiiwyOjaAyMsGT6mdnX0h17uh36Qcre1DyuucHk='></script>
<link rel='stylesheet' id='all-css-0-2' href='https://s1.wp.com/wp-content/mu-plugins/highlander-comments/style.css?m=1377793621h' type='text/css' media='all' />
<!--[if lt IE 8]>
<link rel='stylesheet' id='highlander-comments-ie7-css'  href='https://s1.wp.com/wp-content/mu-plugins/highlander-comments/style-ie7.css?m=1351637563h&#038;ver=20110606' type='text/css' media='all' />
<![endif]-->
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://highlyscalable.wordpress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://s1.wp.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Implementation of MVCC Transactions for Key-Value&nbsp;Stores' href='https://highlyscalable.wordpress.com/2012/01/07/mvcc-transactions-key-value/' />
<link rel='next' title='Tricks with Direct Memory Access in&nbsp;Java' href='https://highlyscalable.wordpress.com/2012/02/02/direct-memory-access-in-java/' />
<meta name="generator" content="WordPress.com" />
<link rel="canonical" href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/" />
<link rel='shortlink' href='http://wp.me/p25MtZ-1W' />
<link rel="alternate" type="application/json+oembed" href="https://public-api.wordpress.com/oembed/1.0/?format=json&amp;url=https%3A%2F%2Fhighlyscalable.wordpress.com%2F2012%2F02%2F01%2Fmapreduce-patterns%2F&amp;for=wpcom-auto-discovery" /><link rel="alternate" type="application/xml+oembed" href="https://public-api.wordpress.com/oembed/1.0/?format=xml&amp;url=https%3A%2F%2Fhighlyscalable.wordpress.com%2F2012%2F02%2F01%2Fmapreduce-patterns%2F&amp;for=wpcom-auto-discovery" />
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="MapReduce Patterns, Algorithms, and Use Cases" />
<meta property="og:url" content="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/" />
<meta property="og:description" content="In this article I digested a number of MapReduce patterns and algorithms to give a systematic view of the different techniques that can be found on the web or scientific articles. Several practical…" />
<meta property="article:published_time" content="2012-02-01T06:52:05+00:00" />
<meta property="article:modified_time" content="2012-05-04T15:00:07+00:00" />
<meta property="og:site_name" content="Highly Scalable Blog" />
<meta property="og:image" content="https://highlyscalable.files.wordpress.com/2012/01/graph-propagation-3.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:site" content="@ikatsov" />
<meta name="twitter:text:title" content="MapReduce Patterns, Algorithms, and Use&nbsp;Cases" />
<meta name="twitter:image" content="https://highlyscalable.files.wordpress.com/2012/02/map-reduce.png?w=240" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:creator" content="@ikatsov" />
<meta property="fb:app_id" content="249643311490" />
<meta property="article:publisher" content="https://www.facebook.com/WordPresscom" />
<link rel="shortcut icon" type="image/x-icon" href="https://s2.wp.com/i/favicon.ico" sizes="16x16 24x24 32x32 48x48" />
<link rel="icon" type="image/x-icon" href="https://s2.wp.com/i/favicon.ico" sizes="16x16 24x24 32x32 48x48" />
<link rel="apple-touch-icon-precomposed" href="https://s0.wp.com/i/webclip.png" />
<link rel='openid.server' href='https://highlyscalable.wordpress.com/?openidserver=1' />
<link rel='openid.delegate' href='https://highlyscalable.wordpress.com/' />
<link rel="search" type="application/opensearchdescription+xml" href="https://highlyscalable.wordpress.com/osd.xml" title="Highly Scalable Blog" />
<link rel="search" type="application/opensearchdescription+xml" href="https://s1.wp.com/opensearch.xml" title="WordPress.com" />
		<style type="text/css">
			.recentcomments a {
				display: inline !important;
				padding: 0 !important;
				margin: 0 !important;
			}

			table.recentcommentsavatartop img.avatar, table.recentcommentsavatarend img.avatar {
				border: 0px;
				margin: 0;
			}

			table.recentcommentsavatartop a, table.recentcommentsavatarend a {
				border: 0px !important;
				background-color: transparent !important;
			}

			td.recentcommentsavatarend, td.recentcommentsavatartop {
				padding: 0px 0px 1px 0px;
				margin: 0px;
			}

			td.recentcommentstextend {
				border: none !important;
				padding: 0px 0px 2px 10px;
			}

			.rtl td.recentcommentstextend {
				padding: 0px 10px 2px 0px;
			}

			td.recentcommentstexttop {
				border: none;
				padding: 0px 0px 0px 10px;
			}

			.rtl td.recentcommentstexttop {
				padding: 0px 10px 0px 0px;
			}
		</style>
		<meta name="application-name" content="Highly Scalable Blog" /><meta name="msapplication-window" content="width=device-width;height=device-height" /><meta name="msapplication-tooltip" content="Articles on Big Data, NoSQL, and Highly Scalable Software Engineering" /><meta name="msapplication-task" content="name=Subscribe;action-uri=https://highlyscalable.wordpress.com/feed/;icon-uri=https://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=Sign up for a free blog;action-uri=http://wordpress.com/signup/;icon-uri=https://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Support;action-uri=http://support.wordpress.com/;icon-uri=https://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Forums;action-uri=http://forums.wordpress.com/;icon-uri=https://s2.wp.com/i/favicon.ico" /><meta name="title" content="MapReduce Patterns, Algorithms, and Use&nbsp;Cases | Highly Scalable Blog on WordPress.com" />
<meta name="description" content="In this article I digested a number of MapReduce patterns and algorithms to give a systematic view of the different techniques that can be found on the web or scientific articles. Several practical case studies are also provided. All descriptions and code snippets use the standard Hadoop&#039;s MapReduce model with Mappers, Reduces, Combiners, Partitioners, and sorting. This&hellip;" />
 		<script type="text/javascript">
		var _ipw_custom = {
				wordAds: '0',
				adSafe: '1',
				domain: 'highlyscalable.wordpress.com',
				pageURL: 'https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/'
			};
		</script>
 		<script type="text/javascript" src="//s.pubmine.com/head.js"></script>
		<script type="text/javascript" src="https://static.criteo.net/js/ld/publishertag.js"></script><link rel="amphtml" href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/amp/" /><style type="text/css" id="syntaxhighlighteranchor"></style>
<script type="text/javascript">
	window.google_analytics_uacct = "UA-52447-2";
</script>

<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-52447-2']);
	_gaq.push(['_setDomainName', 'wordpress.com']);
	_gaq.push(['_initData']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
	})();
</script>
</head>

<body class="post-template-default single single-post postid-120 single-format-standard mp6 customizer-styles-applied layout-sidebar-content highlander-enabled highlander-light" itemscope itemtype="http://schema.org/WebPage">

	<div id="page" class="hfeed site">

		
		<div class="site-fence">

			<header id="masthead" class="site-header" role="banner" itemscope itemtype="http://schema.org/WPHeader">
				<div class="site-branding">
					<h1 class="site-title"><a href="https://highlyscalable.wordpress.com/" rel="home">Highly Scalable Blog</a></h1><p class="site-description">Articles on Big Data, NoSQL, and Highly Scalable Software Engineering</p>				</div>

				<nav id="site-navigation" class="site-navigation" role="navigation" itemscope itemtype="http://schema.org/SiteNavigationElement">
					<button class="site-navigation-toggle" type="button"><span>Menu</span></button>

									</nav>

					<div id="site-sidebar" class="site-sidebar" role="complementary" itemscope itemtype="http://schema.org/WPSideBar">
		<button class="site-sidebar-toggle" type="button"><span>Extras</span></button>

		<div class="sidebar">
			
			<aside id="nav_menu-2" class="widget widget_nav_menu"><div class="menu-main-container"><ul id="menu-main" class="menu"><li id="menu-item-1041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-1041"><a href="https://highlyscalable.wordpress.com/">BLOG</a></li>
<li id="menu-item-1038" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1038"><a href="https://highlyscalable.wordpress.com/whitepapers/">WHITEPAPERS</a></li>
<li id="menu-item-945" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-945"><a href="https://highlyscalable.wordpress.com/about/">ABOUT</a></li>
</ul></div></aside><aside id="blog_subscription-4" class="widget widget_blog_subscription">				<form action="https://subscribe.wordpress.com" method="post" accept-charset="utf-8" id="subscribe-blog">
																	<p><input type="text" name="email" style="width: 95%; padding: 1px 2px" placeholder="Enter your email address" value="" id="subscribe-field"/></p>
					
					<p>
						<input type="hidden" name="action" value="subscribe"/>
						<input type="hidden" name="blog_id" value="30930683"/>
						<input type="hidden" name="source" value="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/"/>
						<input type="hidden" name="sub-type" value="widget"/>
						<input type="hidden" name="redirect_fragment" value="blog_subscription-4" />
						<input type="hidden" id="_wpnonce" name="_wpnonce" value="11af0f84e5" />						<input type="submit" value="Follow via Email" />
					</p>
				</form>
			
</aside><aside id="text-3" class="widget widget_text">			<div class="textwidget"><a href="https://twitter.com/ikatsov" class="twitter-follow-button" data-show-screen-name="false" data-text-color="#666666" data-link-color="#666666">Follow @ikatsov</a></div>
		</aside><aside id="follow_button_widget-4" class="widget widget_follow_button_widget">
		<a class="wordpress-follow-button" href="https://highlyscalable.wordpress.com" data-blog="https://highlyscalable.wordpress.com" data-lang="en" data-show-follower-count="true">Follow Highly Scalable Blog on WordPress.com</a>
		<script type="text/javascript">(function(d){var f = d.getElementsByTagName('SCRIPT')[0], p = d.createElement('SCRIPT');p.type = 'text/javascript';p.async = true;p.src = '//widgets.wp.com/platform.js';f.parentNode.insertBefore(p,f);}(document));</script>

		</aside><aside id="authors-4" class="widget widget_authors"><h2 class="widget-title">Authors</h2><ul><li><a href="https://highlyscalable.wordpress.com/author/highlyscalable/"> <img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=48&#038;d=identicon&#038;r=G' class='avatar avatar-48' height='48' width='48' /> <strong>Ilya Katsov</strong></a><ul><li><a href="https://highlyscalable.wordpress.com/2015/03/10/data-mining-problems-in-retail/">Data Mining Problems in&nbsp;Retail</a></li><li><a href="https://highlyscalable.wordpress.com/2013/08/20/in-stream-big-data-processing/">In-Stream Big Data&nbsp;Processing</a></li><li><a href="https://highlyscalable.wordpress.com/2012/09/18/distributed-algorithms-in-nosql-databases/">Distributed Algorithms in NoSQL&nbsp;Databases</a></li><li><a href="https://highlyscalable.wordpress.com/2012/08/14/speeding-up-hadoop-builds-distributed-parallel-unit-tests-on-jenkins/">Speeding Up Hadoop Builds Using Distributed Unit&nbsp;Tests</a></li><li><a href="https://highlyscalable.wordpress.com/2012/06/05/fast-intersection-sorted-lists-sse/">Fast Intersection of Sorted Lists Using SSE&nbsp;Instructions</a></li></ul></li></ul></aside><aside id="blog-stats-6" class="widget widget_blog-stats"><h2 class="widget-title">Blog Stats</h2>		<ul>
			<li>1,402,879 hits</li>
		</ul>
		</aside>
					</div>
	</div>
			</header>

			
			<div id="content" class="site-content">

				
<main id="primary" class="content-area" role="main" itemprop="mainContentOfPage" itemscope itemtype="http://schema.org/Blog">

	
		
<article id="post-120" class="post-120 post type-post status-publish format-standard hentry category-big-data-2 category-fundamentals tag-algorithm tag-graph tag-hadoop tag-mapreduce tag-optimization tag-pattern tag-use-case" itemscope itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
	<header class="entry-header">
			<nav class="breadcrumbs">
			<span class="archive-link breadcrumb" itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
		<a href="https://highlyscalable.wordpress.com/" itemprop="url">
			<span itemprop="title">Posts</span>
		</a>
	</span>
	
		<span class="entry-title breadcrumb" itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
			<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/" itemprop="url">
				<span itemprop="title">MapReduce Patterns, Algorithms, and Use&nbsp;Cases</span>
			</a>
		</span>
	</nav>
		<h1 class="entry-title" itemprop="headline">MapReduce Patterns, Algorithms, and Use&nbsp;Cases</h1>	</header>

	<div class="entry-content" itemprop="text">
		<p>In this article I digested a number of MapReduce patterns and algorithms to give a systematic view of the different techniques that can be found on the web or scientific articles. Several practical case studies are also provided. All descriptions and code snippets use the standard Hadoop&#8217;s MapReduce model with Mappers, Reduces, Combiners, Partitioners, and sorting. This framework is depicted in the figure below.</p>
<figure data-shortcode="caption" id="attachment_287" style="width: 594px" class="wp-caption aligncenter"><a href="https://highlyscalable.files.wordpress.com/2012/02/map-reduce.png"><img data-attachment-id="287" data-permalink="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/map-reduce-2/" data-orig-file="https://highlyscalable.files.wordpress.com/2012/02/map-reduce.png?w=805" data-orig-size="602,618" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}" data-image-title="map-reduce" data-image-description="" data-medium-file="https://highlyscalable.files.wordpress.com/2012/02/map-reduce.png?w=805?w=292" data-large-file="https://highlyscalable.files.wordpress.com/2012/02/map-reduce.png?w=805?w=602" class="size-full wp-image-287" title="map-reduce" src="https://highlyscalable.files.wordpress.com/2012/02/map-reduce.png?w=805" alt="" srcset="https://highlyscalable.files.wordpress.com/2012/02/map-reduce.png 602w, https://highlyscalable.files.wordpress.com/2012/02/map-reduce.png?w=146 146w, https://highlyscalable.files.wordpress.com/2012/02/map-reduce.png?w=292 292w" sizes="(max-width: 602px) 100vw, 602px"   /></a><figcaption class="wp-caption-text">MapReduce Framework</figcaption></figure>
<h1>Basic MapReduce Patterns</h1>
<h2>Counting and Summing</h2>
<p><strong>Problem Statement:</strong> There is a number of documents where each document is a set of terms. It is required to calculate a total number of occurrences of each term in all documents. Alternatively, it can be an arbitrary function of the terms. For instance, there is a log file where each record contains a response time and it is required to calculate an average response time.</p>
<p><strong>Solution:</strong></p>
<p>Let start with something really simple. The code snippet below shows Mapper that simply emit &#8220;1&#8221; for each term it processes and Reducer that goes through the lists of ones and sum them up:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(docid id, doc d)
      for all term t in doc d do
         Emit(term t, count 1)

class Reducer
   method Reduce(term t, counts [c1, c2,...])
      sum = 0
      for all count c in [c1, c2,...] do
          sum = sum + c
      Emit(term t, count sum)
</pre>
<p>The obvious disadvantage of this approach is a high amount of dummy counters emitted by the Mapper. The Mapper can decrease a number of counters via summing counters for each document:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(docid id, doc d)
      H = new AssociativeArray
      for all term t in doc d do
          H{t} = H{t} + 1
      for all term t in H do
         Emit(term t, count H{t})
</pre>
<p>In order to accumulate counters not only for one document, but for all documents processed by one Mapper node, it is possible to leverage Combiners:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(docid id, doc d)
      for all term t in doc d do
         Emit(term t, count 1)

class Combiner
   method Combine(term t, [c1, c2,...])
      sum = 0
      for all count c in [c1, c2,...] do
          sum = sum + c
      Emit(term t, count sum)

class Reducer
   method Reduce(term t, counts [c1, c2,...])
      sum = 0
      for all count c in [c1, c2,...] do
          sum = sum + c
      Emit(term t, count sum)
</pre>
<h3>Applications:</h3>
<p>Log Analysis, Data Querying</p>
<h2></h2>
<h2>Collating</h2>
<p><strong>Problem Statement:</strong> There is a set of items and some function of one item. It is required to save all items that have the same value of function into one file or perform some other computation that requires all such items to be processed as a group. The most typical example is building of inverted indexes.</p>
<p><strong>Solution:</strong></p>
<p>The solution is straightforward. Mapper computes a given function for each item and emits value of the function as a key and item itself as a value. Reducer obtains all items grouped by function value and process or save them. In case of inverted indexes, items are terms (words) and function is a document ID where the term was found.</p>
<h3>Applications:</h3>
<p>Inverted Indexes, ETL</p>
<h2></h2>
<h2>Filtering (&#8220;Grepping&#8221;), Parsing, and Validation</h2>
<p><strong>Problem Statement:</strong> There is a set of records and it is required to collect all records that meet some condition or transform each record (independently from other records) into another representation. The later case includes such tasks as text parsing and value extraction, conversion from one format to another.</p>
<p><strong>Solution:</strong>  Solution is absolutely straightforward &#8211; Mapper takes records one by one and emits accepted items or their transformed versions.</p>
<h3>Applications:</h3>
<p>Log Analysis, Data Querying, ETL, Data Validation</p>
<h2></h2>
<h2>Distributed Task Execution</h2>
<p><strong>Problem Statement:</strong> There is a large computational problem that can be divided into multiple parts and results from all parts can be combined together to obtain a final result.</p>
<p><strong>Solution:</strong>  Problem description is split in a set of specifications and specifications are stored as input data for Mappers. Each Mapper takes a specification, performs corresponding computations and emits results. Reducer combines all emitted parts into the final result.</p>
<h3>Case Study: Simulation of a Digital Communication System</h3>
<p>There is a software simulator of a digital communication system like WiMAX that passes some volume of random data through the system model and computes error probability of throughput. Each Mapper runs simulation for specified amount of data which is 1/Nth of the required sampling and emit error rate. Reducer computes average error rate.</p>
<h3>Applications:</h3>
<p>Physical and Engineering Simulations, Numerical Analysis, Performance Testing</p>
<h2></h2>
<h2>Sorting</h2>
<p><strong>Problem Statement:</strong> There is a set of records and it is required to sort these records by some rule or process these records in a certain order.</p>
<p><strong>Solution:</strong> Simple sorting is absolutely straightforward &#8211; Mappers just emit all items as values associated with the sorting keys that are assembled as function of items. Nevertheless, in practice sorting is often used in a quite tricky way, that&#8217;s why it is said to be a heart of MapReduce (and Hadoop). In particular, it is very common to use composite keys to achieve secondary sorting and grouping.</p>
<p>Sorting in MapReduce is originally intended for sorting of the emitted key-value pairs by key, but there exist techniques that leverage Hadoop implementation specifics to achieve sorting by values. See this <a href="http://www.riccomini.name/Topics/DistributedComputing/Hadoop/SortByValue/">blog</a> for more details.</p>
<p>It is worth noting that if MapReduce is used for sorting of the original (not intermediate) data, it is often a good idea to continuously maintain data in sorted state using BigTable concepts. In other words, it can be more efficient to sort data once during insertion than sort them for each MapReduce query.</p>
<h3>Applications:</h3>
<p>ETL, Data Analysis</p>
<h2></h2>
<h1>Not-So-Basic MapReduce Patterns</h1>
<h2>Iterative Message Passing (Graph Processing)</h2>
<p><strong>Problem Statement:</strong> There is a network of entities and relationships between them. It is required to calculate a state of each entity on the basis of properties of the other entities in its neighborhood. This state can represent a distance to other nodes,  indication that there is a neighbor with the certain properties, characteristic of neighborhood density and so on.</p>
<p><strong>Solution:</strong> A network is stored as a set of nodes and each node contains a list of adjacent node IDs. Conceptually, MapReduce jobs are performed in iterative way and at each iteration each node sends messages to its neighbors. Each neighbor updates its state on the basis of the received messages. Iterations are terminated by some condition like fixed maximal number of iterations (say, network diameter) or negligible changes in states between two consecutive iterations. From the technical point of view, Mapper emits messages for each node using ID of the adjacent node as a key. As result, all messages are grouped by the incoming node and reducer is able to recompute state and rewrite node with the new state. This algorithm is shown in the figure below:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(id n, object N)
      Emit(id n, object N)
      for all id m in N.OutgoingRelations do
         Emit(id m, message getMessage(N))

class Reducer
   method Reduce(id m, [s1, s2,...])
      M = null
      messages = []
      for all s in [s1, s2,...] do
          if IsObject(s) then
             M = s
          else               // s is a message
             messages.add(s)
      M.State = calculateState(messages)
      Emit(id m, item M)
</pre>
<p>It should be emphasized that state of one node rapidly propagates across all the network of network is not too sparse because all nodes that were &#8220;infected&#8221; by this state start to &#8220;infect&#8221; all their neighbors. This process is illustrated in the figure below:</p>
<p><a href="https://highlyscalable.files.wordpress.com/2012/01/graph-propagation-3.png"><img data-attachment-id="161" data-permalink="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/graph-propagation-3/" data-orig-file="https://highlyscalable.files.wordpress.com/2012/01/graph-propagation-3.png?w=805" data-orig-size="550,467" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}" data-image-title="Iterative Message Passing" data-image-description="" data-medium-file="https://highlyscalable.files.wordpress.com/2012/01/graph-propagation-3.png?w=805?w=300" data-large-file="https://highlyscalable.files.wordpress.com/2012/01/graph-propagation-3.png?w=805?w=550" class="aligncenter size-full wp-image-161" title="Iterative Message Passing" src="https://highlyscalable.files.wordpress.com/2012/01/graph-propagation-3.png?w=805" alt="Iterative Message Passing" srcset="https://highlyscalable.files.wordpress.com/2012/01/graph-propagation-3.png 550w, https://highlyscalable.files.wordpress.com/2012/01/graph-propagation-3.png?w=150 150w, https://highlyscalable.files.wordpress.com/2012/01/graph-propagation-3.png?w=300 300w" sizes="(max-width: 550px) 100vw, 550px"   /></a></p>
<h3>Case Study: Availability Propagation Through The Tree of Categories</h3>
<p><strong>Problem Statement:</strong> This problem is inspired by real life eCommerce task. There is a tree of categories that branches out from large categories (like Men, Women, Kids) to smaller ones (like Men Jeans or Women Dresses), and eventually to small end-of-line categories (like Men Blue Jeans). End-of-line category is either available (contains products) or not. Some high level category is available if there is at least one available end-of-line category in its subtree. The goal is to calculate availabilities for all categories if availabilities of end-of-line categories are know.</p>
<p><strong>Solution:</strong> This problem can be solved using the framework that was described in the previous section. We define getMessage and calculateState methods as follows:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class N
   State in {True = 2, False = 1, null = 0}, initialized 1 or 2 for end-of-line categories, 0 otherwise

method getMessage(object N)
   return N.State

method calculateState(state s, data [d1, d2,...])
   return max( [d1, d2,...] )
</pre>
<h3>Case Study: Breadth-First Search</h3>
<p><strong>Problem Statement:</strong> There is a graph and it is required to calculate distance (a number of hops) from one source node to all other nodes in the graph.</p>
<p><strong>Solution:</strong> Source node emits 0 to all its neighbors and these neighbors propagate this counter incrementing it by 1 during each hope:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class N
   State is distance, initialized 0 for source node, INFINITY for all other nodes

method getMessage(N)
   return N.State + 1

method calculateState(state s, data [d1, d2,...])
   min( [d1, d2,...] )
</pre>
<h3>Case Study: PageRank and Mapper-Side Data Aggregation</h3>
<p>This algorithm was suggested by Google to calculate relevance of a web page as a function of authoritativeness (PageRank) of pages that have links to this page. The real algorithm is quite complex, but in its core it is just a propagation of weights between nodes where each node calculates its weight as a mean of the incoming weights:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class N
    State is PageRank

method getMessage(object N)
    return N.State / N.OutgoingRelations.size()

method calculateState(state s, data [d1, d2,...])
    return ( sum([d1, d2,...]) )
</pre>
<p>It is worth mentioning that the schema we use is too generic and doesn&#8217;t take advantage of the fact that state is a numerical value. In most of practical cases, we can perform aggregation of values on the Mapper side due to virtue of this fact. This optimization  is illustrated in the code snippet below (for the PageRank algorithm):</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Initialize
      H = new AssociativeArray
   method Map(id n, object N)
      p = N.PageRank  / N.OutgoingRelations.size()
      Emit(id n, object N)
      for all id m in N.OutgoingRelations do
         H{m} = H{m} + p
   method Close
      for all id n in H do
         Emit(id n, value H{n})

class Reducer
   method Reduce(id m, [s1, s2,...])
      M = null
      p = 0
      for all s in [s1, s2,...] do
          if IsObject(s) then
             M = s
          else
             p = p + s
      M.PageRank = p
      Emit(id m, item M)
</pre>
<h3>Applications:</h3>
<p>Graph Analysis, Web Indexing</p>
<h2></h2>
<h2>Distinct Values (Unique Items Counting)</h2>
<p><strong>Problem Statement:</strong> There is a set of records that contain fields F and G. Count the total number of unique values of filed F for each subset of records that have the same G (grouped by G).</p>
<p>The problem can be a little bit generalized and formulated in terms of faceted search:</p>
<p><strong>Problem Statement:</strong> There is a set of records. Each record has field F and arbitrary number of category labels G = {G1, G2, &#8230;} . Count the total number of unique values of filed F for each subset of records for each value of any label. Example:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
Record 1: F=1, G={a, b}
Record 2: F=2, G={a, d, e}
Record 3: F=1, G={b}
Record 4: F=3, G={a, b}

Result:
a -&gt; 3   // F=1, F=2, F=3
b -&gt; 2   // F=1, F=3
d -&gt; 1   // F=2
e -&gt; 1   // F=2
</pre>
<p><strong>Solution I:</strong></p>
<p>The first approach is to solve the problem in two stages. At the first stage Mapper emits dummy counters for each pair of F and G; Reducer calculates a total number of occurrences for each such pair. The main goal of this phase is to guarantee uniqueness of F values. At the second phase pairs are grouped by G and the total number of items in each group is calculated.</p>
<p>Phase I:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(null, record [value f, categories [g1, g2,...]])
      for all category g in [g1, g2,...]
         Emit(record [g, f], count 1)

class Reducer
   method Reduce(record [g, f], counts [n1, n2, ...])
      Emit(record [g, f], null )
</pre>
<p>Phase II:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(record [f, g], null)
      Emit(value g, count 1)

class Reducer
   method Reduce(value g, counts [n1, n2,...])
      Emit(value g, sum( [n1, n2,...] ) )
</pre>
<p><strong>Solution II:</strong></p>
<p>The second solution requires only one MapReduce job, but it is not really scalable and its applicability is limited. The algorithm is simple &#8211; Mapper emits values and categories, Reducer excludes duplicates from the list of categories for each value and increment counters for each category. The final step is to sum all counter emitted by Reducer. This approach is applicable if th number of record with the same f value is not very high and total number of categories is also limited. For instance, this approach is applicable for processing of web logs and classification of users &#8211; total number of users is high, but number of events for one user is limited, as well as a number of categories to classify by. It worth noting that Combiners can be used in this schema to exclude duplicates from category lists before data will be transmitted to Reducer.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(null, record [value f, categories [g1, g2,...] )
      for all category g in [g1, g2,...]
          Emit(value f, category g)

class Reducer
   method Initialize
      H = new AssociativeArray : category -&gt; count
   method Reduce(value f, categories [g1, g2,...])
      [g1', g2',..] = ExcludeDuplicates( [g1, g2,..] )
      for all category g in [g1', g2',...]
         H{g} = H{g} + 1
   method Close
      for all category g in H do
         Emit(category g, count H{g})
</pre>
<h3>Applications:</h3>
<p>Log Analysis, Unique Users Counting</p>
<h2></h2>
<h2>Cross-Correlation</h2>
<p><strong>Problem Statement: </strong>There is a set of tuples of items. For each possible pair of items calculate a number of tuples where these items co-occur. If the total number of items is N then N*N values should be reported.</p>
<p>This problem appears in text analysis (say, items are words and tuples are sentences), market analysis (customers who buy <em>this</em> tend to also buy <em>that</em>). If N*N is quite small and such a matrix can fit in the memory of a single machine, then implementation is straightforward.</p>
<p><strong>Pairs Approach</strong></p>
<p>The first approach is to emit all pairs and dummy counters from Mappers and sum these counters on Reducer. The shortcomings are:</p>
<ul>
<li>The benefit from combiners is limited, as it is likely that all pair are distinct</li>
<li>There is no in-memory accumulations</li>
</ul>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(null, items [i1, i2,...] )
      for all item i in [i1, i2,...]
         for all item j in [i1, i2,...]
            Emit(pair [i j], count 1)

class Reducer
   method Reduce(pair [i j], counts [c1, c2,...])
      s = sum([c1, c2,...])
      Emit(pair[i j], count s)
</pre>
<p><strong>Stripes Approach</strong></p>
<p>The second approach is to group data by the first item in pair and maintain an associative array (&#8220;stripe&#8221;) where counters for all adjacent items are accumulated. Reducer receives all stripes for leading item i, merges them, and emits the same result as in the Pairs approach.</p>
<ul>
<li>Generates fewer intermediate keys. Hence the framework has less sorting to do.</li>
<li>Greately benefits from combiners.</li>
<li>Performs in-memory accumulation. This can lead to problems, if not properly implemented.</li>
<li>More complex implementation.</li>
<li>In general, &#8220;stripes&#8221; is faster than &#8220;pairs&#8221;</li>
</ul>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(null, items [i1, i2,...] )
      for all item i in [i1, i2,...]
         H = new AssociativeArray : item -&gt; counter
         for all item j in [i1, i2,...]
            H{j} = H{j} + 1
         Emit(item i, stripe H)

class Reducer
   method Reduce(item i, stripes [H1, H2,...])
      H = new AssociativeArray : item -&gt; counter
      H = merge-sum( [H1, H2,...] )
      for all item j in H.keys()
         Emit(pair [i j], H{j})
</pre>
<h3>Applications:</h3>
<p>Text Analysis, Market Analysis</p>
<h3>References:</h3>
<ol>
<li>Lin J. Dyer C. Hirst G. <a href="http://www.amazon.com/Data-Intensive-Processing-MapReduce-Synthesis-Technologies/dp/1608453421/">Data Intensive Processing MapReduce</a></li>
</ol>
<h1></h1>
<h1>Relational MapReduce Patterns</h1>
<p>In this section we go though the main relational operators and discuss how these operators can implemented in MapReduce terms.</p>
<h2>Selection</h2>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(rowkey key, tuple t)
      if t satisfies the predicate
         Emit(tuple t, null)
</pre>
<h2>Projection</h2>
<p>Projection is just a little bit more complex than selection, but we should use a Reducer in this case to eliminate possible duplicates.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(rowkey key, tuple t)
      tuple g = project(t)  // extract required fields to tuple g
      Emit(tuple g, null)

class Reducer
   method Reduce(tuple t, array n)   // n is an array of nulls
      Emit(tuple t, null)
</pre>
<h2>Union</h2>
<p>Mappers are fed by all records of two sets to be united. Reducer is used to eliminate duplicates.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(rowkey key, tuple t)
      Emit(tuple t, null)

class Reducer
   method Reduce(tuple t, array n)   // n is an array of one or two nulls
      Emit(tuple t, null)
</pre>
<h2>Intersection</h2>
<p>Mappers are fed by all records of two sets to be intersected. Reducer emits only records that occurred twice. It is possible only if both sets contain this record because record includes primary key and can occur in one set only once.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(rowkey key, tuple t)
      Emit(tuple t, null)

class Reducer
   method Reduce(tuple t, array n)   // n is an array of one or two nulls
      if n.size() = 2
          Emit(tuple t, null)
</pre>
<h2>Difference</h2>
<p>Let&#8217;s we have two sets of records &#8211; R and S. We want to compute difference R &#8211; S. Mapper emits all tuples and tag which is a name of the set this record came from. Reducer emits only records that came from R but not from S.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(rowkey key, tuple t)
      Emit(tuple t, string t.SetName)    // t.SetName is either 'R' or 'S'

class Reducer
   method Reduce(tuple t, array n) // array n can be ['R'], ['S'], ['R' 'S'], or ['S', 'R']
      if n.size() = 1 and n[1] = 'R'
          Emit(tuple t, null)
</pre>
<h2>GroupBy and Aggregation</h2>
<p>Grouping and aggregation can be performed in one MapReduce job as follows. Mapper extract from each tuple values to group by and aggregate and emits them. Reducer receives values to be aggregated already grouped and calculates an aggregation function. Typical aggregation functions like sum or max can be calculated in a streaming fashion, hence don&#8217;t require to handle all values simultaneously. Nevertheless, in some cases two phase MapReduce job may be required &#8211; see pattern <strong>Distinct Values</strong> as an example.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(null, tuple [value GroupBy, value AggregateBy, value ...])
      Emit(value GroupBy, value AggregateBy)
class Reducer
   method Reduce(value GroupBy, [v1, v2,...])
      Emit(value GroupBy, aggregate( [v1, v2,...] ) )  // aggregate() : sum(), max(),...
</pre>
<h2></h2>
<h2>Joining</h2>
<p>Joins are perfectly possible in MapReduce framework, but there exist a number of techniques that differ in efficiency and data volumes they are oriented for. In this section we study some basic approaches. The references section contains links to detailed studies of join techniques.</p>
<h3>Repartition Join (Reduce Join, Sort-Merge Join)</h3>
<p>This algorithm joins of two sets R and L on some key k. Mapper goes through all tuples from R and L, extracts key k from the tuples, marks tuple with a tag that indicates a set this tuple came from (&#8216;R&#8217; or &#8216;L&#8217;), and emits tagged tuple using k as a key. Reducer receives all tuples for a particular key k and put them into two buckets &#8211; for R and for L. When two buckets are filled, Reducer runs nested loop over them and emits a cross join of the buckets. Each emitted tuple is a concatenation R-tuple, L-tuple, and key k. This approach has the following disadvantages:</p>
<ul>
<li>Mapper emits absolutely all data, even for keys that occur only in one set and have no pair in the other.</li>
<li>Reducer should hold all data for one key in the memory. If data doesn&#8217;t fit the memory, its Reducer&#8217;s responsibility to handle this by some kind of swap.</li>
</ul>
<div>Nevertheless, Repartition Join is a most generic technique that can be successfully used when other optimized techniques are not applicable.</div>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Map(null, tuple [join_key k, value v1, value v2,...])
      Emit(join_key k, tagged_tuple [set_name tag, values [v1, v2, ...] ] )

class Reducer
   method Reduce(join_key k, tagged_tuples [t1, t2,...])
      H = new AssociativeArray : set_name -&gt; values
      for all tagged_tuple t in [t1, t2,...]     // separate values into 2 arrays
         H{t.tag}.add(t.values)
      for all values r in H{'R'}                 // produce a cross-join of the two arrays
         for all values l in H{'L'}
            Emit(null, [k r l] )
</pre>
<h3>Replicated Join (Map Join, Hash Join)</h3>
<p>In practice, it is typical to join a small set with a large one (say, a list of users with a list of log records). Let&#8217;s assume that we join two sets &#8211; R and L, R is relative small. If so, R can be distributed to all Mappers and each Mapper can load it and index by the join key. The most common and efficient indexing technique here is a hash table. After this, Mapper goes through tuples of the set L and joins them with the corresponding tuples from R that are stored in the hash table. This approach is very effective because there is no need in sorting or transmission of the set L over the network, but set R should be quite small to be distributed to the all Mappers.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Mapper
   method Initialize
      H = new AssociativeArray : join_key -&gt; tuple from R
      R = loadR()
      for all [ join_key k, tuple [r1, r2,...] ] in R
         H{k} = H{k}.append( [r1, r2,...] )

   method Map(join_key k, tuple l)
      for all tuple r in H{k}
         Emit(null, tuple [k r l] )
</pre>
<h3>References:</h3>
<ol>
<li><a href="http://www.inf.ed.ac.uk/publications/thesis/online/IM100859.pdf">Join Algorithms using Map/Reduce</a></li>
<li><a href="http://infolab.stanford.edu/~ullman/pub/join-mr.pdf">Optimizing Joins in a MapReduce Environment</a></li>
</ol>
<h1>Machine Learning and Math MapReduce Algorithms</h1>
<ul>
<li>C. T. Chu <em>et al</em> provides an excellent description of  machine learning algorithms for MapReduce in the article <a title="Map-Reduce for Machine Learning on Multicore" href="http://www.cs.stanford.edu/people/ang//papers/nips06-mapreducemulticore.pdf" target="_blank">Map-Reduce for Machine Learning on Multicore</a>.</li>
<li>FFT using MapReduce: <a href="http://www.slideshare.net/hortonworks/large-scale-math-with-hadoop-mapreduce">http://www.slideshare.net/hortonworks/large-scale-math-with-hadoop-mapreduce</a></li>
<li>MapReduce for integer factorization: <a href="http://www.javiertordable.com/files/MapreduceForIntegerFactorization.pdf">http://www.javiertordable.com/files/MapreduceForIntegerFactorization.pdf</a></li>
<li>Matrix multiplication with MapReduce: <a href="http://csl.skku.edu/papers/CS-TR-2010-330.pdf">http://csl.skku.edu/papers/CS-TR-2010-330.pdf</a> and <a href="http://www.norstad.org/matrix-multiply/index.html">http://www.norstad.org/matrix-multiply/index.html</a></li>
</ul>
			<style type="text/css">
			div.wpmrec2x{max-width:610px;}
			div.wpmrec2x div.u > div{float:left;margin-right:10px;}
			div.wpmrec2x div.u > div:nth-child(3n){margin-right:0px;}
			</style>		<div class="wpcnt">
			<div class="wpa wpmrec wpmrec2x">
				<span class="wpa-about">Advertisements</span>
				<div class="u">
								<script type='text/javascript' id="s26942">
				(function(g,$){if("undefined"!=typeof g.__ATA){
					g.__ATA.initAd({collapseEmpty:'after', sectionId:26942, width:300, height:250});
					g.__ATA.initAd({collapseEmpty:'after', sectionId:114160, width:300, height:250});
				}})(window,jQuery);
			</script>
				</div>
				        <div id="crt-372109281" style="width:300px;height:250px;"></div>
        <script type="text/javascript">
        var o = document.getElementById('crt-372109281');
        if ("undefined"!=typeof Criteo) {
            var p = o.parentNode;
            p.style.setProperty('display', 'inline-block', 'important');
            o.style.setProperty('display', 'block', 'important');
            Criteo.DisplayAcceptableAdIfAdblocked({zoneid:388248,containerid:"crt-372109281",collapseContainerIfNotAdblocked:true,"callifnotadblocked": function () {var o = document.getElementById('crt-372109281'); o.style.setProperty('display','none','important');o.style.setProperty('visbility','hidden','important'); }
        });
        } else {
            o.style.setProperty('display', 'none', 'important');
            o.style.setProperty('visibility', 'hidden', 'important');
        }
        </script>
			</div>
		</div><div id="jp-post-flair" class="sharedaddy sd-like-enabled sd-sharing-enabled"><div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-120" class="share-twitter sd-button share-icon" href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-120" class="share-facebook sd-button share-icon" href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-linkedin"><a rel="nofollow" data-shared="sharing-linkedin-120" class="share-linkedin sd-button share-icon" href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?share=linkedin" target="_blank" title="Click to share on LinkedIn"><span>LinkedIn</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-120" class="share-google-plus-1 sd-button share-icon" href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-tumblr"><a rel="nofollow" data-shared="" class="share-tumblr sd-button share-icon" href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?share=tumblr" target="_blank" title="Click to share on Tumblr"><span>Tumblr</span></a></li><li class="share-reddit"><a rel="nofollow" data-shared="" class="share-reddit sd-button share-icon" href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?share=reddit" target="_blank" title="Click to share on Reddit"><span>Reddit</span></a></li><li class="share-end"></li></ul></div></div></div><div class='sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded' id='like-post-wrapper-30930683-120-5939b7da174c6' data-src='//widgets.wp.com/likes/#blog_id=30930683&amp;post_id=120&amp;origin=highlyscalable.wordpress.com&amp;obj_id=30930683-120-5939b7da174c6' data-name='like-post-frame-30930683-120-5939b7da174c6'><h3 class='sd-title'>Like this:</h3><div class='likes-widget-placeholder post-likes-widget-placeholder' style='height: 55px;'><span class='button'><span>Like</span></span> <span class="loading">Loading...</span></div><span class='sd-text-color'></span><a class='sd-link-color'></a></div>
<div id='jp-relatedposts' class='jp-relatedposts' >
	<h3 class="jp-relatedposts-headline"><em>Related</em></h3>
</div></div>			</div>

	<footer class="entry-footer">
		
<ul class="entry-meta">
	<li class="posted-on">
		<h2>Date</h2>
			<span class="posted-on">
		<span class="sep">on</span> <span class="entry-date"><a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/" rel="bookmark"><time class="entry-time published" datetime="2012-02-01T06:52:05+00:00">February 1, 2012</time><time class="entry-time updated" datetime="2012-05-04T15:00:07+00:00">May 4, 2012</time></a></span>
	</span>
		</li>

	<li class="posted-by">
		<h2>Author</h2>
			<span class="posted-by byline">
		<span class="sep">by</span>	<span class="entry-author author vcard" itemprop="author" itemscope itemtype="http://schema.org/Person"><a class="url fn n" href="https://highlyscalable.wordpress.com/author/highlyscalable/" rel="author" itemprop="url"><span itemprop="name">Ilya Katsov</span></a></span>	</span>
		</li>

	
		<li class="category-list">
			<h2>Category</h2>
			<a href="https://highlyscalable.wordpress.com/category/big-data-2/" rel="category tag">Big Data</a>, <a href="https://highlyscalable.wordpress.com/category/fundamentals/" rel="category tag">Fundamentals</a>		</li>

	
	
		<li class="tag-list">
			<h2>Tag</h2>
			<a href="https://highlyscalable.wordpress.com/tag/algorithm/" rel="tag">algorithm</a>, <a href="https://highlyscalable.wordpress.com/tag/graph/" rel="tag">graph</a>, <a href="https://highlyscalable.wordpress.com/tag/hadoop/" rel="tag">hadoop</a>, <a href="https://highlyscalable.wordpress.com/tag/mapreduce/" rel="tag">mapreduce</a>, <a href="https://highlyscalable.wordpress.com/tag/optimization/" rel="tag">optimization</a>, <a href="https://highlyscalable.wordpress.com/tag/pattern/" rel="tag">pattern</a>, <a href="https://highlyscalable.wordpress.com/tag/use-case/" rel="tag">use case</a>		</li>

	
	
		<li class="comments-number">
			<h2>Comments</h2>
			<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comments">43 Comments</a>		</li>

	</ul>
	</footer>
</article>

		

<section id="comments" class="comments-area">

	
	
		<header class="comments-header">
			<h1 class="comments-title">
				43 Comments			</h1>

			<p>
				<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comments">Leave a Comment</a>
			</p>
		</header>

		<ol class="comment-list show-avatars">
					<li id="comment-20" class="comment even thread-even depth-1 highlander-comment">
			<article id="div-comment-20" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/9362d646bbaef428fef4e8a87e72c5fc?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://gravatar.com/brandynwhite' rel='external nofollow' class='url'>Brandyn White</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-20">
							<time datetime="2012-02-09T17:23:05+00:00">
								February 9, 2012 at 5:23 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Good article!  I recommend this book <a href="http://www.umiacs.umd.edu/~jimmylin/book.html" rel="nofollow">http://www.umiacs.umd.edu/~jimmylin/book.html</a> and a shameless plug for a paper I wrote on computer vision design patterns for MapReduce (<a href="https://www.cs.umd.edu/~bwhite/extra/papers/MDMKDD10-bwhite.pdf" rel="nofollow">https://www.cs.umd.edu/~bwhite/extra/papers/MDMKDD10-bwhite.pdf</a>).</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=20#respond' onclick='return addComment.moveForm( "div-comment-20", "20", "respond", "120" )' aria-label='Reply to Brandyn White'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-23" class="comment odd alt thread-odd thread-alt depth-1 highlander-comment">
			<article id="div-comment-23" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/e6d1e8cc7214730f17f1f9f598329346?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Nitesh</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-23">
							<time datetime="2012-02-10T04:32:25+00:00">
								February 10, 2012 at 4:32 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>nice article.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=23#respond' onclick='return addComment.moveForm( "div-comment-23", "23", "respond", "120" )' aria-label='Reply to Nitesh'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-35" class="comment even thread-even depth-1 highlander-comment">
			<article id="div-comment-35" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://1.gravatar.com/avatar/1ca6513acae8e332fe66c9526f0b5667?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">alice</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-35">
							<time datetime="2012-02-11T10:10:22+00:00">
								February 11, 2012 at 10:10 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>great summary.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=35#respond' onclick='return addComment.moveForm( "div-comment-35", "35", "respond", "120" )' aria-label='Reply to alice'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-36" class="comment odd alt thread-odd thread-alt depth-1 highlander-comment">
			<article id="div-comment-36" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/9c70bffb84b165410b65ebb74223a47d?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">steve</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-36">
							<time datetime="2012-02-11T15:50:13+00:00">
								February 11, 2012 at 3:50 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thanks for that great article! Gives a really nice overview of the problems map reduce is able to solve.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=36#respond' onclick='return addComment.moveForm( "div-comment-36", "36", "respond", "120" )' aria-label='Reply to steve'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-39" class="comment even thread-even depth-1 highlander-comment">
			<article id="div-comment-39" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://i0.wp.com/a0.twimg.com/profile_images/293518877/surfulater_icon_normal.jpg?resize=50%2C50' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://twitter.com/surfulater' rel='external nofollow' class='url'>Neville Franks (@surfulater)</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-39">
							<time datetime="2012-02-11T21:37:09+00:00">
								February 11, 2012 at 9:37 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Excellent article. We hear so much about Map Reduce these days, especially in the NoSQL world, so to see well written set of use cases is very helpful indeed. Thanks.</p>
<p>-Neville</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=39#respond' onclick='return addComment.moveForm( "div-comment-39", "39", "respond", "120" )' aria-label='Reply to Neville Franks (@surfulater)'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-47" class="comment odd alt thread-odd thread-alt depth-1 parent highlander-comment">
			<article id="div-comment-47" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/320373498564cbdcb8aecacde763e2ec?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Michael Gorbunov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-47">
							<time datetime="2012-02-14T15:49:41+00:00">
								February 14, 2012 at 3:49 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thanks for this detailed article! I found it very helpful.<br />
I wonder whether the value associated with Y on the figure above has to be equal 6 instead of 7?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=47#respond' onclick='return addComment.moveForm( "div-comment-47", "47", "respond", "120" )' aria-label='Reply to Michael Gorbunov'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-48" class="comment byuser comment-author-highlyscalable bypostauthor even depth-2 highlander-comment">
			<article id="div-comment-48" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-48">
							<time datetime="2012-02-15T06:57:35+00:00">
								February 15, 2012 at 6:57 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Michael,</p>
<p>In this example Reducer computes max() function, hence for key <em>b</em> we have max(2,7).</p>
<p>-Ilya</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=48#respond' onclick='return addComment.moveForm( "div-comment-48", "48", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-51" class="comment odd alt thread-even depth-1 parent highlander-comment">
			<article id="div-comment-51" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/857d949505120b7c4565fb74811a16aa?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://www.khan.org' rel='external nofollow' class='url'>Khan</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-51">
							<time datetime="2012-02-16T19:02:55+00:00">
								February 16, 2012 at 7:02 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I&#8217;m not sure if Michael is referring to the same thing I am, but in the very first image, the value of b immediately prior to the Shuffle and Sort should be 1,7, no?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=51#respond' onclick='return addComment.moveForm( "div-comment-51", "51", "respond", "120" )' aria-label='Reply to Khan'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-56" class="comment byuser comment-author-highlyscalable bypostauthor even depth-2 highlander-comment">
			<article id="div-comment-56" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-56">
							<time datetime="2012-02-20T06:49:03+00:00">
								February 20, 2012 at 6:49 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thanks for pointing this out. Fixed.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=56#respond' onclick='return addComment.moveForm( "div-comment-56", "56", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-53" class="comment odd alt thread-odd thread-alt depth-1 highlander-comment">
			<article id="div-comment-53" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/fc43c102c2eb10ec9b5b84435ab0fd8a?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">sch</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-53">
							<time datetime="2012-02-19T10:02:26+00:00">
								February 19, 2012 at 10:02 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>for the &#8220;inverted indexes&#8221; example, i think the items should be the docID and the function should be the word in the doc.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=53#respond' onclick='return addComment.moveForm( "div-comment-53", "53", "respond", "120" )' aria-label='Reply to sch'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-54" class="comment even thread-even depth-1 parent highlander-comment">
			<article id="div-comment-54" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/fc43c102c2eb10ec9b5b84435ab0fd8a?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">sch</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-54">
							<time datetime="2012-02-19T13:26:29+00:00">
								February 19, 2012 at 1:26 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>The case of Map Side aggregation PageRank.<br />
s = N.PageRank  / s.OutgoingRelations.size()<br />
should be<br />
p = N.PageRank  / s.OutgoingRelations.size()</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=54#respond' onclick='return addComment.moveForm( "div-comment-54", "54", "respond", "120" )' aria-label='Reply to sch'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-57" class="comment byuser comment-author-highlyscalable bypostauthor odd alt depth-2 highlander-comment">
			<article id="div-comment-57" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-57">
							<time datetime="2012-02-20T07:02:41+00:00">
								February 20, 2012 at 7:02 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Sure. It seems there are even more typos in this code snippet, fixed.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=57#respond' onclick='return addComment.moveForm( "div-comment-57", "57", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-66" class="comment even thread-odd thread-alt depth-1 parent highlander-comment">
			<article id="div-comment-66" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/9e840766611f942c7c0a9ad6987a5d78?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://d.hatena.ne.jp/nowokay/20120223#1330017784' rel='external nofollow' class='url'>naoki kishida</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-66">
							<time datetime="2012-02-23T19:45:36+00:00">
								February 23, 2012 at 7:45 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hello. Thank you for the good article.<br />
I have translated this into Japanese.<br />
If it has any problem, point out to me.<br />
<a href="http://d.hatena.ne.jp/nowokay/20120223#1330017784" rel="nofollow">http://d.hatena.ne.jp/nowokay/20120223#1330017784</a></p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=66#respond' onclick='return addComment.moveForm( "div-comment-66", "66", "respond", "120" )' aria-label='Reply to naoki kishida'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-77" class="comment byuser comment-author-highlyscalable bypostauthor odd alt depth-2 highlander-comment">
			<article id="div-comment-77" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-77">
							<time datetime="2012-02-29T06:50:36+00:00">
								February 29, 2012 at 6:50 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Naoki,<br />
Thank you very much! I appreciate it.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=77#respond' onclick='return addComment.moveForm( "div-comment-77", "77", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-71" class="comment byuser comment-author-jeungun even thread-even depth-1 parent highlander-comment">
			<article id="div-comment-71" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://1.gravatar.com/avatar/a2d6e3d3c6d233e0160b47074a588dab?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Jose Asuncion</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-71">
							<time datetime="2012-02-24T20:31:59+00:00">
								February 24, 2012 at 8:31 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I was wondering, I have to make some queries in my map step. Is this a concern for performance in map reduce?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=71#respond' onclick='return addComment.moveForm( "div-comment-71", "71", "respond", "120" )' aria-label='Reply to Jose Asuncion'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-73" class="comment byuser comment-author-highlyscalable bypostauthor odd alt depth-2 parent highlander-comment">
			<article id="div-comment-73" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-73">
							<time datetime="2012-02-27T06:31:50+00:00">
								February 27, 2012 at 6:31 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Jose, </p>
<p>Do you mean queries to some external system? In this case it depends on scalability of that system &#8211; it should be as scalable and fast as your MapReduce system in going to be. It is also a matter of relationship between the duration of the map step and durations of the shuffling and reducing steps.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=73#respond' onclick='return addComment.moveForm( "div-comment-73", "73", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-74" class="comment byuser comment-author-jeungun even depth-3 parent highlander-comment">
			<article id="div-comment-74" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://1.gravatar.com/avatar/a2d6e3d3c6d233e0160b47074a588dab?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Jose Asuncion</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-74">
							<time datetime="2012-02-27T11:49:42+00:00">
								February 27, 2012 at 11:49 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>No the query I will be executing in my map step is not from an external system but rather will be also from the db I am running map reduce on.  Will there be a performance hit?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=74#respond' onclick='return addComment.moveForm( "div-comment-74", "74", "respond", "120" )' aria-label='Reply to Jose Asuncion'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-76" class="comment byuser comment-author-highlyscalable bypostauthor odd alt depth-4 parent highlander-comment">
			<article id="div-comment-76" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-76">
							<time datetime="2012-02-29T06:39:35+00:00">
								February 29, 2012 at 6:39 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Jose,<br />
Could you please provide more details on your case &#8211; what implementation do you use, what is the input for Mappers, are queries executed against local data for each Mapper? For example, Greenplum Database allows to mix SQL queries and custom MapReduce code in one job and does it so efficiently that this can not be considered as a performance bottleneck.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-79" class="comment byuser comment-author-jeungun even depth-4 parent highlander-comment">
			<article id="div-comment-79" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://1.gravatar.com/avatar/a2d6e3d3c6d233e0160b47074a588dab?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Jose Asuncion</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-79">
							<time datetime="2012-03-01T02:37:45+00:00">
								March 1, 2012 at 2:37 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>The question was hypothetical. There was no specific job I was thinking of. But after you saying that databases like greenplum allows mixing of map reduce code and sql queries, it suddenly dawned to me that my database might be doing the same as well. But just to know your thoughts because I don&#8217;t  know, I am currently using MongoDB, do you know if it optimizes like Greenplum does?</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-80" class="comment byuser comment-author-highlyscalable bypostauthor odd alt depth-4 parent highlander-comment">
			<article id="div-comment-80" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-80">
							<time datetime="2012-03-01T06:44:32+00:00">
								March 1, 2012 at 6:44 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I didn&#8217;t try to run queries from within mappers in MongoDB, but I think that it doesn&#8217;t work as efficient as Greenplum in general case. I think so because Greenplum&#8217;s query optimizer considers an entire job with all its SQL queries and MapReduce operations as one large query and can globally optimize it, e.g. run SQL and MapReduce parts in parallel if there is no cross dependencies between them. This is especially efficient for large job scenarios with multiple SQL queries and MapReduce tasks. I never heard that MongoDB is able to do such things.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-82" class="comment byuser comment-author-jeungun even depth-4 highlander-comment">
			<article id="div-comment-82" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://1.gravatar.com/avatar/a2d6e3d3c6d233e0160b47074a588dab?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Jose Asuncion</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-82">
							<time datetime="2012-03-01T07:37:25+00:00">
								March 1, 2012 at 7:37 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>The part about the optimizing the sql queries and map reduce jobs into one large query is interesting. Anyway thanks for sharing your thoughts. Great article by the way. I bookmarked it for future reference. 🙂</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-75" class="comment odd alt thread-odd thread-alt depth-1 highlander-comment">
			<article id="div-comment-75" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://1.gravatar.com/avatar/dcf57d8aaab2995882e46b008941b1e0?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://gravatar.com/geraldmc' rel='external nofollow' class='url'>geraldmc</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-75">
							<time datetime="2012-02-28T20:07:55+00:00">
								February 28, 2012 at 8:07 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Very well done. Thanks!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=75#respond' onclick='return addComment.moveForm( "div-comment-75", "75", "respond", "120" )' aria-label='Reply to geraldmc'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-78" class="comment even thread-even depth-1 parent highlander-comment">
			<article id="div-comment-78" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/620ed2c3129f0c0887efbc5a54d6125c?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://heblog.ronklein.co.il' rel='external nofollow' class='url'>Ron Klein</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-78">
							<time datetime="2012-02-29T20:36:45+00:00">
								February 29, 2012 at 8:36 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thanks for a great article.<br />
Note that there&#8217;s a casing typo at the Mapper snippet of the &#8220;Counting and Summing&#8221; solution: sometimes it&#8217;s an upper cased H and sometimes it&#8217;s a lower cased one.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=78#respond' onclick='return addComment.moveForm( "div-comment-78", "78", "respond", "120" )' aria-label='Reply to Ron Klein'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-81" class="comment byuser comment-author-highlyscalable bypostauthor odd alt depth-2 highlander-comment">
			<article id="div-comment-81" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-81">
							<time datetime="2012-03-01T07:13:54+00:00">
								March 1, 2012 at 7:13 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Ron,<br />
Thanks for pointing this out. Fixed.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=81#respond' onclick='return addComment.moveForm( "div-comment-81", "81", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1166" class="comment even thread-odd thread-alt depth-1 parent highlander-comment">
			<article id="div-comment-1166" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/8e8b7ef0a1441c3b460903e9c218e510?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Vlad</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1166">
							<time datetime="2012-07-28T12:20:10+00:00">
								July 28, 2012 at 12:20 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I think we can also count unique values per category in one map-reduce job (that takes into account a smaller number of values, as opposed to small number of categories). What do you think of this approach?</p>
<p><a href="http://pastebin.com/EzrfTMJY" rel="nofollow">http://pastebin.com/EzrfTMJY</a></p>
<p>Yet again: good post.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1166#respond' onclick='return addComment.moveForm( "div-comment-1166", "1166", "respond", "120" )' aria-label='Reply to Vlad'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1167" class="comment byuser comment-author-highlyscalable bypostauthor odd alt depth-2 highlander-comment">
			<article id="div-comment-1167" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1167">
							<time datetime="2012-07-30T05:07:35+00:00">
								July 30, 2012 at 5:07 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Vlad,<br />
This is a good point. Thank you for digging into it.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1167#respond' onclick='return addComment.moveForm( "div-comment-1167", "1167", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1171" class="comment byuser comment-author-nellaivijay even thread-even depth-1 highlander-comment">
			<article id="div-comment-1171" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/bc9a24ee5430e8e806a2cf593fb8fca3?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">nellaivijay</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1171">
							<time datetime="2012-08-04T13:49:01+00:00">
								August 4, 2012 at 1:49 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>excellent summarization of all the pattern</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1171#respond' onclick='return addComment.moveForm( "div-comment-1171", "1171", "respond", "120" )' aria-label='Reply to nellaivijay'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1177" class="comment odd alt thread-odd thread-alt depth-1 parent highlander-comment">
			<article id="div-comment-1177" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/9302347b6878d287068908f64aa35c3f?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">jds</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1177">
							<time datetime="2012-08-13T15:48:31+00:00">
								August 13, 2012 at 3:48 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Okay, dumb question time, but what language are the snippets in?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1177#respond' onclick='return addComment.moveForm( "div-comment-1177", "1177", "respond", "120" )' aria-label='Reply to jds'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1179" class="comment byuser comment-author-highlyscalable bypostauthor even depth-2 highlander-comment">
			<article id="div-comment-1179" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1179">
							<time datetime="2012-08-14T13:58:21+00:00">
								August 14, 2012 at 1:58 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>It&#8217;s just pseudocode 😦</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1179#respond' onclick='return addComment.moveForm( "div-comment-1179", "1179", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1178" class="comment odd alt thread-even depth-1 highlander-comment">
			<article id="div-comment-1178" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/327d907bf3ac35ae86cad2dcfb4c96db?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">samir</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1178">
							<time datetime="2012-08-13T16:15:58+00:00">
								August 13, 2012 at 4:15 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>nice case studies</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1178#respond' onclick='return addComment.moveForm( "div-comment-1178", "1178", "respond", "120" )' aria-label='Reply to samir'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1318" class="comment even thread-odd thread-alt depth-1 parent highlander-comment">
			<article id="div-comment-1318" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/26ea3f88264b9dc9a4e81ddf153af60d?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://mymailcool.tistory.com/' rel='external nofollow' class='url'>yoon-sung Cho</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1318">
							<time datetime="2012-09-19T08:49:58+00:00">
								September 19, 2012 at 8:49 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hello^^<br />
Thank you for good information.<br />
I&#8217;m student studying Hadoop.<br />
This article is very helpful for me!<br />
Could i use this information in my blog?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1318#respond' onclick='return addComment.moveForm( "div-comment-1318", "1318", "respond", "120" )' aria-label='Reply to yoon-sung Cho'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1319" class="comment byuser comment-author-highlyscalable bypostauthor odd alt depth-2 highlander-comment">
			<article id="div-comment-1319" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1319">
							<time datetime="2012-09-19T08:54:35+00:00">
								September 19, 2012 at 8:54 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Sure.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1319#respond' onclick='return addComment.moveForm( "div-comment-1319", "1319", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1342" class="comment byuser comment-author-sandeep007734 even thread-even depth-1 highlander-comment">
			<article id="div-comment-1342" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/57e82a5d5603d4e628e13ec3fdeb7874?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://sandeep007734.wordpress.com' rel='external nofollow' class='url'>sandeep007734</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1342">
							<time datetime="2012-09-23T19:01:35+00:00">
								September 23, 2012 at 7:01 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>nice&#8230;. will try out some of the algos</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1342#respond' onclick='return addComment.moveForm( "div-comment-1342", "1342", "respond", "120" )' aria-label='Reply to sandeep007734'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-1841" class="comment byuser comment-author-vibneiro odd alt thread-odd thread-alt depth-1 parent highlander-comment">
			<article id="div-comment-1841" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/2113a4d8488a97ece21ace89921b4b30?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://ivoroshilin.com' rel='external nofollow' class='url'>vibneiro</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1841">
							<time datetime="2013-03-15T07:54:43+00:00">
								March 15, 2013 at 7:54 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Ilya,<br />
Good job on consolidating map-reduce patterns with explanations!<br />
I&#8217;ve got a question regarding sorting big amount of data on N-nodes in a distributed environment using map-reduce concept:<br />
Assume a client application queries quite large amount of data which needs to be sorted.<br />
Eventually on Reduce-step sorted data is received and merged by a master node from other nodes. What happens If the sorted data doesn&#8217;t fit into memory of this Reduce-Node? Do you know ways to do it in a different way?</p>
<p>Thank you.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1841#respond' onclick='return addComment.moveForm( "div-comment-1841", "1841", "respond", "120" )' aria-label='Reply to vibneiro'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1847" class="comment byuser comment-author-highlyscalable bypostauthor even depth-2 parent highlander-comment">
			<article id="div-comment-1847" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1847">
							<time datetime="2013-03-21T11:27:55+00:00">
								March 21, 2013 at 11:27 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I&#8217;m not sure if I got your question correctly, but you probably should take at look at a description of Hadoop sorting procedures (for example, <a href="https://www.inkling.com/read/hadoop-definitive-guide-tom-white-3rd/chapter-6/shuffle-and-sort" rel="nofollow">https://www.inkling.com/read/hadoop-definitive-guide-tom-white-3rd/chapter-6/shuffle-and-sort</a>). Hadoop uses quite sophisticated disk-based sorting procedures and is able to sort petabytes of data.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1847#respond' onclick='return addComment.moveForm( "div-comment-1847", "1847", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-1849" class="comment byuser comment-author-vibneiro odd alt depth-3 highlander-comment">
			<article id="div-comment-1849" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/2113a4d8488a97ece21ace89921b4b30?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://ivoroshilin.com' rel='external nofollow' class='url'>vibneiro</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1849">
							<time datetime="2013-03-21T12:07:22+00:00">
								March 21, 2013 at 12:07 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Right, that&#8217;s what I was looking for. I first thought it would be a kind of modified k-way merge-procedure.<br />
I found that Hadoop uses TeraSort.<br />
<a href="http://hadoop.apache.org/docs/current/api/org/apache/hadoop/examples/terasort/package-summary.html" rel="nofollow">http://hadoop.apache.org/docs/current/api/org/apache/hadoop/examples/terasort/package-summary.html</a></p>
<p>And looks like they won the world sorting benchmark: <a href="http://sortbenchmark.org/" rel="nofollow">http://sortbenchmark.org/</a></p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1849#respond' onclick='return addComment.moveForm( "div-comment-1849", "1849", "respond", "120" )' aria-label='Reply to vibneiro'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-1894" class="comment even thread-even depth-1 highlander-comment">
			<article id="div-comment-1894" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/8bd84aab85b69a1ae30120ca9e21501f?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://www.sreenivaskandakuru.com' rel='external nofollow' class='url'>sreeni</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-1894">
							<time datetime="2013-06-05T13:21:52+00:00">
								June 5, 2013 at 1:21 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>super article Ilya katsov. Hats off to you<br />
i was searching for a good article on design patterns with map-reduce and this is it !!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=1894#respond' onclick='return addComment.moveForm( "div-comment-1894", "1894", "respond", "120" )' aria-label='Reply to sreeni'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-2029" class="comment odd alt thread-odd thread-alt depth-1 highlander-comment">
			<article id="div-comment-2029" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/ca95ae10cb09dfd3214aeaaae68cb662?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://gravatar.com/anjucs15' rel='external nofollow' class='url'>anjucs15</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-2029">
							<time datetime="2013-09-06T09:51:17+00:00">
								September 6, 2013 at 9:51 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Nice Post, Helped me a lot</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=2029#respond' onclick='return addComment.moveForm( "div-comment-2029", "2029", "respond", "120" )' aria-label='Reply to anjucs15'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-2038" class="comment even thread-even depth-1 highlander-comment">
			<article id="div-comment-2038" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/fd419c9f888601ec41a03c0086612d70?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">prakash</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-2038">
							<time datetime="2013-09-10T10:12:08+00:00">
								September 10, 2013 at 10:12 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Does any one has phythoncode which covers these alogrithms.. Fast Reply is much appreciated&#8230;.Thanks in advance</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=2038#respond' onclick='return addComment.moveForm( "div-comment-2038", "2038", "respond", "120" )' aria-label='Reply to prakash'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-2039" class="comment odd alt thread-odd thread-alt depth-1 parent highlander-comment">
			<article id="div-comment-2039" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/fd419c9f888601ec41a03c0086612d70?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">prakash</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-2039">
							<time datetime="2013-09-10T10:16:30+00:00">
								September 10, 2013 at 10:16 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Ilya Katsov</p>
<p>Do you python code covering above alogorithms and use cases.</p>
<p>The code would be of much help in understanding algorithms clearly.</p>
<p>Thank you</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=2039#respond' onclick='return addComment.moveForm( "div-comment-2039", "2039", "respond", "120" )' aria-label='Reply to prakash'>Reply</a></div>			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-2043" class="comment byuser comment-author-highlyscalable bypostauthor even depth-2 highlander-comment">
			<article id="div-comment-2043" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://0.gravatar.com/avatar/c11f79021b0f6248403dbf5e4b9d529b?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Ilya Katsov</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-2043">
							<time datetime="2013-09-10T14:46:29+00:00">
								September 10, 2013 at 2:46 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Real executable code could be quite verbose, so I&#8217;ve decided to use pseudocode. Unfortunately I don&#8217;t have python implementations.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=2043#respond' onclick='return addComment.moveForm( "div-comment-2043", "2043", "respond", "120" )' aria-label='Reply to Ilya Katsov'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-2940" class="comment odd alt thread-even depth-1 highlander-comment">
			<article id="div-comment-2940" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://2.gravatar.com/avatar/264f827193320824cb50ae1de5b7887d?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn"><a href='http://wiki.glitchdata.com' rel='external nofollow' class='url'>Glitchdata</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-2940">
							<time datetime="2014-08-07T04:13:11+00:00">
								August 7, 2014 at 4:13 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thanks for the MR explanation. More patterns here:<br />
<a href="http://wiki.glitchdata.com/index.php?title=Architecture_Patterns" rel="nofollow">http://wiki.glitchdata.com/index.php?title=Architecture_Patterns</a></p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=2940#respond' onclick='return addComment.moveForm( "div-comment-2940", "2940", "respond", "120" )' aria-label='Reply to Glitchdata'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-3871" class="comment even thread-odd thread-alt depth-1 highlander-comment">
			<article id="div-comment-3871" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://1.gravatar.com/avatar/719adc0a8c015627cc79f0c8408f6099?s=50&#038;d=identicon&#038;r=G' class='avatar avatar-50' height='50' width='50' />						<b class="fn">Utkarsh</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/#comment-3871">
							<time datetime="2015-04-23T13:41:09+00:00">
								April 23, 2015 at 1:41 pm							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thanks. 🙂</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/?replytocom=3871#respond' onclick='return addComment.moveForm( "div-comment-3871", "3871", "respond", "120" )' aria-label='Reply to Utkarsh'>Reply</a></div>			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		</ol>

		
	
	
		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2012/02/01/mapreduce-patterns/#respond" style="display:none;">Cancel reply</a></small></h3>			<form action="https://highlyscalable.wordpress.com/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate>
				<input type="hidden" id="highlander_comment_nonce" name="highlander_comment_nonce" value="15ce1f3398" /><input type="hidden" name="_wp_http_referer" value="/2012/02/01/mapreduce-patterns/" />
<input type="hidden" name="hc_post_as" id="hc_post_as" value="guest" />

<div class="comment-form-field comment-textarea">
	<label for="comment">Enter your comment here...</label>
	<div id="comment-form-comment"><textarea id="comment" name="comment" title="Enter your comment here..."></textarea></div>
</div>

<div id="comment-form-identity">

	<div id="comment-form-nascar">
		<p>Fill in your details below or click an icon to log in:</p>
		<ul>
			<li class="selected" style="display:none;">
				<a href="#comment-form-guest" id="postas-guest" title="Guest">
					<span></span>
				</a>
			</li>
			<li>
				<a href="#comment-form-load-service:WordPress.com" id="postas-wordpress" title="WordPress.com">
					<span></span>
				</a>
			</li>
			<li>
				<a href="#comment-form-load-service:Twitter" id="postas-twitter" title="Twitter">
					<span></span>
				</a>
			</li>
			<li>
				<a href="#comment-form-load-service:Facebook" id="postas-facebook" title="Facebook">
					<span></span>
				</a>
			</li>
			<li>
			<iframe id="googleplus-sign-in" name="googleplus-sign-in" src="https://public-api.wordpress.com/connect/?googleplus-sign-in=https%3A%2F%2Fhighlyscalable.wordpress.com" width="24" height="24" scrolling="no" allowtransparency="true" seamless="seamless" frameborder="0"></iframe>
			</li>
		</ul>
	</div>

	<div id="comment-form-guest" class="comment-form-service selected">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
<a href="https://gravatar.com/site/signup/" target="_blank">				<img src="https://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25&amp;d=identicon&amp;forcedefault=y&amp;r=G" alt="Gravatar" width="25" class="no-grav" />
</a>			</div>

				<div class="comment-form-fields">
				<div class="comment-form-field comment-form-email">
					<label for="email">Email <span class="required">(required)</span> <span class="nopublish">(Address never made public)</span></label>
					<div class="comment-form-input"><input id="email" name="email" type="email" value="" /></div>
				</div>
				<div class="comment-form-field comment-form-author">
					<label for="author">Name <span class="required">(required)</span></label>
					<div class="comment-form-input"><input id="author" name="author" type="text" value="" /></div>
				</div>
				<div class="comment-form-field comment-form-url">
					<label for="url">Website</label>
					<div class="comment-form-input"><input id="url" name="url" type="url" value="" /></div>
				</div>
			</div>
	
		</div>
	</div>

	<div id="comment-form-wordpress" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="https://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25&amp;d=identicon&amp;forcedefault=y&amp;r=G" alt="WordPress.com Logo" width="25" class="no-grav" />
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="wp_avatar" id="wordpress-avatar" class="comment-meta-wordpress" value="" />
				<input type="hidden" name="wp_user_id" id="wordpress-user_id" class="comment-meta-wordpress" value="" />
				<input type="hidden" name="wp_access_token" id="wordpress-access_token" class="comment-meta-wordpress" value="" />
				<p class="comment-form-posting-as pa-wordpress"><strong></strong> You are commenting using your WordPress.com account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'wordpress' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>

	<div id="comment-form-twitter" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="https://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25&amp;d=identicon&amp;forcedefault=y&amp;r=G" alt="Twitter picture" width="25" class="no-grav" />
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="twitter_avatar" id="twitter-avatar" class="comment-meta-twitter" value="" />
				<input type="hidden" name="twitter_user_id" id="twitter-user_id" class="comment-meta-twitter" value="" />
				<input type="hidden" name="twitter_access_token" id="twitter-access_token" class="comment-meta-twitter" value="" />
				<p class="comment-form-posting-as pa-twitter"><strong></strong> You are commenting using your Twitter account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'twitter' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>

	<div id="comment-form-facebook" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="https://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25&amp;d=identicon&amp;forcedefault=y&amp;r=G" alt="Facebook photo" width="25" class="no-grav" />
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="fb_avatar" id="facebook-avatar" class="comment-meta-facebook" value="" />
				<input type="hidden" name="fb_user_id" id="facebook-user_id" class="comment-meta-facebook" value="" />
				<input type="hidden" name="fb_access_token" id="facebook-access_token" class="comment-meta-facebook" value="" />
				<p class="comment-form-posting-as pa-facebook"><strong></strong> You are commenting using your Facebook account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'facebook' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>

	<div id="comment-form-googleplus" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="https://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25&amp;d=identicon&amp;forcedefault=y&amp;r=G" alt="Google+ photo" width="25" class="no-grav" />
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="googleplus_avatar" id="googleplus-avatar" class="comment-meta-googleplus" value="" />
				<input type="hidden" name="googleplus_user_id" id="googleplus-user_id" class="comment-meta-googleplus" value="" />
				<input type="hidden" name="googleplus_access_token" id="googleplus-access_token" class="comment-meta-googleplus" value="" />
				<p class="comment-form-posting-as pa-googleplus"><strong></strong> You are commenting using your Google+ account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'googleplus' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>


	<div id="comment-form-load-service" class="comment-form-service">
		<div class="comment-form-posting-as-cancel"><a href="javascript:HighlanderComments.cancelExternalWindow();">Cancel</a></div>
		<p>Connecting to %s</p>
	</div>

</div>

<script type="text/javascript">
var highlander_expando_javascript = function(){
	var input = document.createElement( 'input' ),
	    comment = jQuery( '#comment' );

	if ( 'placeholder' in input ) {
		comment.attr( 'placeholder', jQuery( '.comment-textarea label' ).remove().text() );
	}

	// Expando Mode: start small, then auto-resize on first click + text length
	jQuery( '#comment-form-identity' ).hide();
	jQuery( '#comment-form-subscribe' ).hide();
	jQuery( '#commentform .form-submit' ).hide();

	comment.css( { 'height':'10px' } ).one( 'focus', function() {
		var timer = setInterval( HighlanderComments.resizeCallback, 10 )
		jQuery( this ).animate( { 'height': HighlanderComments.initialHeight } ).delay( 100 ).queue( function(n) { clearInterval( timer ); HighlanderComments.resizeCallback(); n(); } );
		jQuery( '#comment-form-identity' ).slideDown();
		jQuery( '#comment-form-subscribe' ).slideDown();
		jQuery( '#commentform .form-submit' ).slideDown();
	});
}
jQuery(document).ready( highlander_expando_javascript );
</script>

<div id="comment-form-subscribe">
	<p class="comment-subscription-form"><input type="checkbox" name="subscribe" id="subscribe" value="subscribe" style="width: auto;"/> <label class="subscribe-label" id="subscribe-label" for="subscribe" style="display: inline;">Notify me of new comments via email.</label></p><p class="post-subscription-form"><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto;"/> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog"  style="display: inline;">Notify me of new posts via email.</label></p></div>




<p class="form-submit"><input name="submit" type="submit" id="comment-submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='120' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="ba7c44e808" /></p>
<input type="hidden" name="genseq" value="1496954842" />
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="234"/></p>			</form>
			</div><!-- #respond -->
	<div style="clear: both"></div>
	
</section>


	
</main>


	<nav class="navigation post-navigation" role="navigation">
		<h2 class="screen-reader-text">Post navigation</h2>
		<div class="nav-links"><div class="nav-previous"><a href="https://highlyscalable.wordpress.com/2012/01/07/mvcc-transactions-key-value/" rel="prev"><span class="meta-nav">Previous Article</span><span class="post-title">Implementation of MVCC Transactions for Key-Value&nbsp;Stores</span></a></div><div class="nav-next"><a href="https://highlyscalable.wordpress.com/2012/02/02/direct-memory-access-in-java/" rel="next"><span class="meta-nav">Next Article</span><span class="post-title">Tricks with Direct Memory Access in&nbsp;Java</span></a></div></div>
	</nav>				
			</div><!-- #content -->

			
			<footer id="colophon" class="site-footer" role="contentinfo" itemscope itemtype="http://schema.org/WPFooter">
				<nav class="social-navigation" role="navigation">
									</nav>

				<div class="credits" role="contentinfo">
					<div>
						<a href="https://wordpress.com/?ref=footer_website">Create a free website or blog at WordPress.com.</a>					</div>
				</div>
			</footer>
		</div><!-- .site-fence -->

		
	</div><!-- #page -->

	<!--  -->
<script type='text/javascript' src='//0.gravatar.com/js/gprofiles.js?ver=201723y'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='https://s1.wp.com/wp-content/mu-plugins/gravatar-hovercards/wpgroho.js?m=1380573781h'></script>

	<script>
		//initialize and attach hovercards to all gravatars
		jQuery( document ).ready( function( $ ) {

			if (typeof Gravatar === "undefined"){
				return;
			}

			if ( typeof Gravatar.init !== "function" ) {
				return;
			}			

			Gravatar.profile_cb = function( hash, id ) {
				WPGroHo.syncProfileData( hash, id );
			};
			Gravatar.my_hash = WPGroHo.my_hash;
			Gravatar.init( 'body', '#wp-admin-bar-my-account' );
		});
	</script>

		<div style="display:none">
	<div class="grofile-hash-map-9362d646bbaef428fef4e8a87e72c5fc">
	</div>
	<div class="grofile-hash-map-e6d1e8cc7214730f17f1f9f598329346">
	</div>
	<div class="grofile-hash-map-1ca6513acae8e332fe66c9526f0b5667">
	</div>
	<div class="grofile-hash-map-9c70bffb84b165410b65ebb74223a47d">
	</div>
	<div class="grofile-hash-map-d8779c6a7b869939864e49e5bca4ab62">
	</div>
	<div class="grofile-hash-map-320373498564cbdcb8aecacde763e2ec">
	</div>
	<div class="grofile-hash-map-c11f79021b0f6248403dbf5e4b9d529b">
	</div>
	<div class="grofile-hash-map-857d949505120b7c4565fb74811a16aa">
	</div>
	<div class="grofile-hash-map-fc43c102c2eb10ec9b5b84435ab0fd8a">
	</div>
	<div class="grofile-hash-map-9e840766611f942c7c0a9ad6987a5d78">
	</div>
	<div class="grofile-hash-map-a2d6e3d3c6d233e0160b47074a588dab">
	</div>
	<div class="grofile-hash-map-dcf57d8aaab2995882e46b008941b1e0">
	</div>
	<div class="grofile-hash-map-620ed2c3129f0c0887efbc5a54d6125c">
	</div>
	<div class="grofile-hash-map-8e8b7ef0a1441c3b460903e9c218e510">
	</div>
	<div class="grofile-hash-map-bc9a24ee5430e8e806a2cf593fb8fca3">
	</div>
	<div class="grofile-hash-map-9302347b6878d287068908f64aa35c3f">
	</div>
	<div class="grofile-hash-map-327d907bf3ac35ae86cad2dcfb4c96db">
	</div>
	<div class="grofile-hash-map-26ea3f88264b9dc9a4e81ddf153af60d">
	</div>
	<div class="grofile-hash-map-57e82a5d5603d4e628e13ec3fdeb7874">
	</div>
	<div class="grofile-hash-map-2113a4d8488a97ece21ace89921b4b30">
	</div>
	<div class="grofile-hash-map-8bd84aab85b69a1ae30120ca9e21501f">
	</div>
	<div class="grofile-hash-map-ca95ae10cb09dfd3214aeaaae68cb662">
	</div>
	<div class="grofile-hash-map-fd419c9f888601ec41a03c0086612d70">
	</div>
	<div class="grofile-hash-map-264f827193320824cb50ae1de5b7887d">
	</div>
	<div class="grofile-hash-map-719adc0a8c015627cc79f0c8408f6099">
	</div>
	</div>
<script type='text/javascript'>
/* <![CDATA[ */
var HighlanderComments = {"loggingInText":"Logging In\u2026","submittingText":"Posting Comment\u2026","postCommentText":"Post Comment","connectingToText":"Connecting to %s","commentingAsText":"%1$s: You are commenting using your %2$s account.","logoutText":"Log Out","loginText":"Log In","connectURL":"https:\/\/highlyscalable.wordpress.com\/public.api\/connect\/?action=request","logoutURL":"https:\/\/highlyscalable.wordpress.com\/wp-login.php?action=logout&_wpnonce=bbbafa4dd1","homeURL":"https:\/\/highlyscalable.wordpress.com\/","postID":"120","gravDefault":"identicon","enterACommentError":"Please enter a comment","enterEmailError":"Please enter your email address here","invalidEmailError":"Invalid email address","enterAuthorError":"Please enter your name here","gravatarFromEmail":"This picture will show whenever you leave a comment. Click to customize it.","logInToExternalAccount":"Log in to use details from one of these accounts.","change":"Change","changeAccount":"Change Account","comment_registration":"","userIsLoggedIn":"","isJetpack":"0","text_direction":"ltr"};
/* ]]> */
</script>
<script type='text/javascript' src='https://s2.wp.com/_static/??/wp-content/js/jquery/jquery.autoresize.js,/wp-content/mu-plugins/highlander-comments/script.js?m=1479964158j'></script>
<script type='text/javascript' src='https://platform.twitter.com/widgets.js?ver=20111117'></script>

	<div id="carousel-reblog-box">
		<form action="#" name="carousel-reblog">
			<textarea id="carousel-reblog-content" name="carousel-reblog-content" placeholder="Add your thoughts here... (optional)"></textarea>
			<label for="carousel-reblog-to-blog-id" id="carousel-reblog-lblogid">Post to</label>
			<select name="carousel-reblog-to-blog-id" id="carousel-reblog-to-blog-id">
						</select>

			<div class="submit">
				<span class="canceltext"><a href="#" class="cancel">Cancel</a></span>
				<input type="submit" name="carousel-reblog-submit" class="button" id="carousel-reblog-submit" value="Reblog Post" />
				<input type="hidden" id="carousel-reblog-blog-id" value="30930683" />
				<input type="hidden" id="carousel-reblog-blog-url" value="https://highlyscalable.wordpress.com" />
				<input type="hidden" id="carousel-reblog-blog-title" value="Highly Scalable Blog" />
				<input type="hidden" id="carousel-reblog-post-url" value="" />
				<input type="hidden" id="carousel-reblog-post-title" value="" />
			</div>

			<input type="hidden" id="_wpnonce" name="_wpnonce" value="5e717f6a49" /><input type="hidden" name="_wp_http_referer" value="/2012/02/01/mapreduce-patterns/" />		</form>

		<div class="arrow"></div>
	</div>

	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"https:\/\/highlyscalable.wordpress.com\/2012\/02\/01\/mapreduce-patterns\/":120};
	</script>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-linkedin' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomlinkedin', 'menubar=1,resizable=1,width=580,height=450' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-tumblr' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtumblr', 'menubar=1,resizable=1,width=450,height=450' );
				return false;
			});
		});
		</script>
		<script type='text/javascript' src='https://s1.wp.com/wp-content/mu-plugins/akismet-3.0/_inc/form.js?m=1404442431h'></script>
<script type='text/javascript' src='https://s0.wp.com/_static/??-eJzTLy/QTc7PK0nNK9EvyClNz8wr1i+uzCtJrMjITM/IAeKS1CJMEWP94uSizIISoOIM5/yiVL2sYh19yo1yKioFmldQADTOPtfW0MTIyNjEyNDYJAsAjsE/mg=='></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "https://s0.wp.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "https://s0.wp.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?m=1363304414h&amp;ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();

// Infinite scroll support
jQuery( function( $ ) {
	$( document.body ).on( 'post-load', function() {
		SyntaxHighlighter.highlight();
	} );
} );
</script>
<link rel='stylesheet' id='all-css-0-3' href='https://s1.wp.com/wp-content/mu-plugins/carousel/jetpack-carousel.css?m=1481571546h' type='text/css' media='all' />
<!--[if lte IE 8]>
<link rel='stylesheet' id='jetpack-carousel-ie8fix-css'  href='https://s1.wp.com/wp-content/mu-plugins/carousel/jetpack-carousel-ie8fix.css?m=1412618825h&#038;ver=20121024' type='text/css' media='all' />
<![endif]-->
<script type='text/javascript'>
/* <![CDATA[ */
var _nowellSettings = {"l10n":{"prevText":"Prev","nextText":"Next"}};
/* ]]> */
</script>
<script type='text/javascript'>
/* <![CDATA[ */
var actionbardata = {"siteID":"30930683","siteName":"Highly Scalable Blog","siteURL":"http:\/\/highlyscalable.wordpress.com","icon":"<img alt='' src='https:\/\/s1.wp.com\/i\/logo\/wpcom-gray-white.png' class='avatar avatar-50' height='50' width='50' \/>","canManageOptions":"","canCustomizeSite":"","isFollowing":"","themeSlug":"premium\/nowell","signupURL":"https:\/\/wordpress.com\/start\/","loginURL":"https:\/\/highlyscalable.wordpress.com\/wp-login.php?redirect_to=https%3A%2F%2Fhighlyscalable.wordpress.com%2F2012%2F02%2F01%2Fmapreduce-patterns%2F","themeURL":"https:\/\/wordpress.com\/theme\/nowell\/","xhrURL":"https:\/\/highlyscalable.wordpress.com\/wp-admin\/admin-ajax.php","nonce":"b968cddfd2","isSingular":"1","isFolded":"","isLoggedIn":"","isMobile":"","subscribeNonce":"<input type=\"hidden\" id=\"_wpnonce\" name=\"_wpnonce\" value=\"11af0f84e5\" \/>","referer":"https:\/\/highlyscalable.wordpress.com\/2012\/02\/01\/mapreduce-patterns\/","canFollow":"1","statusMessage":"","customizeLink":"https:\/\/highlyscalable.wordpress.com\/wp-admin\/customize.php?url=https%3A%2F%2Fhighlyscalable.wordpress.com%2F2012%2F02%2F01%2Fmapreduce-patterns%2F","postID":"120","shortlink":"http:\/\/wp.me\/p25MtZ-1W","canEditPost":"","editLink":"https:\/\/wordpress.com\/post\/highlyscalable.wordpress.com\/120","statsLink":"https:\/\/wordpress.com\/stats\/post\/120\/highlyscalable.wordpress.com","i18n":{"view":"View site","follow":"Follow","following":"Following","edit":"Edit","login":"Log in","signup":"Sign up","customize":"Customize","report":"Report this content","themeInfo":"Get theme: Nowell","shortlink":"Copy shortlink","copied":"Copied","followedText":"New posts from this site will now appear in your <a href=\"https:\/\/wordpress.com\/\">Reader<\/a>","foldBar":"Collapse this bar","unfoldBar":"Expand this bar","editSubs":"Manage subscriptions","viewReader":"View site in the Reader","subscribe":"Sign me up","enterEmail":"Enter your email address","followers":"Join 2,796 other followers","alreadyUser":"Already have a WordPress.com account? <a href=\"https:\/\/highlyscalable.wordpress.com\/wp-login.php?redirect_to=https%3A%2F%2Fhighlyscalable.wordpress.com%2F2012%2F02%2F01%2Fmapreduce-patterns%2F\">Log in now.<\/a>","stats":"Stats"}};
/* ]]> */
</script>
<script type='text/javascript'>
/* <![CDATA[ */
var jetpackCarouselStrings = {"widths":[370,700,1000,1200,1400,2000],"is_logged_in":"","lang":"en","ajaxurl":"https:\/\/highlyscalable.wordpress.com\/wp-admin\/admin-ajax.php","nonce":"3a01cfa99e","display_exif":"1","display_geo":"1","single_image_gallery":"1","single_image_gallery_media_file":"","background_color":"black","comment":"Comment","post_comment":"Post Comment","write_comment":"Write a Comment...","loading_comments":"Loading Comments...","download_original":"View full size <span class=\"photo-size\">{0}<span class=\"photo-size-times\">\u00d7<\/span>{1}<\/span>","no_comment_text":"Please be sure to submit some text with your comment.","no_comment_email":"Please provide an email address to comment.","no_comment_author":"Please provide your name to comment.","comment_post_error":"Sorry, but there was an error posting your comment. Please try again later.","comment_approved":"Your comment was approved.","comment_unapproved":"Your comment is in moderation.","camera":"Camera","aperture":"Aperture","shutter_speed":"Shutter Speed","focal_length":"Focal Length","comment_registration":"0","require_name_email":"1","login_url":"https:\/\/highlyscalable.wordpress.com\/wp-login.php?redirect_to=https%3A%2F%2Fhighlyscalable.wordpress.com%2F2012%2F02%2F01%2Fmapreduce-patterns%2F","blog_id":"30930683","local_comments_commenting_as":"<fieldset><label for=\"email\">Email (Required)<\/label> <input type=\"text\" name=\"email\" class=\"jp-carousel-comment-form-field jp-carousel-comment-form-text-field\" id=\"jp-carousel-comment-form-email-field\" \/><\/fieldset><fieldset><label for=\"author\">Name (Required)<\/label> <input type=\"text\" name=\"author\" class=\"jp-carousel-comment-form-field jp-carousel-comment-form-text-field\" id=\"jp-carousel-comment-form-author-field\" \/><\/fieldset><fieldset><label for=\"url\">Website<\/label> <input type=\"text\" name=\"url\" class=\"jp-carousel-comment-form-field jp-carousel-comment-form-text-field\" id=\"jp-carousel-comment-form-url-field\" \/><\/fieldset>","reblog":"Reblog","reblogged":"Reblogged","reblog_add_thoughts":"Add your thoughts here... (optional)","reblogging":"Reblogging...","post_reblog":"Post Reblog","stats_query_args":"blog=30930683&v=wpcom&tz=0&user_id=0&subd=highlyscalable","is_public":"1","reblog_enabled":""};
/* ]]> */
</script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='https://s2.wp.com/_static/??-eJyVUNtOwzAM/SFSbxMC8YD4FpOa1VmcBDvZ2N+TonVMqJrEk63jc5PhVJzPqVKqEAxGOrKn8jUEe4CbkzRXYttzMoh8IIPPRo0mTGMk/UuuE0mnFCXhJpDyiWIENKNqc8jF6b8yQU6LhpOPbaQf3GeRrndKJZ4H+SWtlMex3907anezSto3l4+kyrPZFbvn4CvnNDtct7VSVtbLhv44PV/GcMtayfKouRlFCFQL+oNbgDuakq26j4isYBMqp/0yu+hNXrePL7vN5mm7ew7fdXG+ww=='></script>
<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script>		<iframe src='https://widgets.wp.com/likes/master.html?ver=20170206#ver=20170206' scrolling='no' id='likes-master' name='likes-master' style='display:none;'></iframe>
		<div id='likes-other-gravatars'><div class="likes-text"><span>%d</span> bloggers like this:</div><ul class="wpl-avatars sd-like-gravatars"></ul></div>
		<script>
			var _comscore = _comscore || [];
			_comscore.push({
				c1: "2",
				c2: "7518284"
			});
			(function() {
				var s = document.createElement("script"),
					el = document.getElementsByTagName("script")[0];
				s.defer = true;
				s.src = (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js";
				el.parentNode.insertBefore(s, el);
			})();
		</script>
		<noscript>
			<p class="robots-nocontent"><img src="https://sb.scorecardresearch.com/p?c1=2&c2=7518284&c3=&c4=&c5=&c6=&c15=&cv=2.0&cj=1" alt="" style="display:none;" width="1" height="1" /></p>
		</noscript><script src="//stats.wp.com/w.js?56" type="text/javascript" async defer></script>
<script type="text/javascript">
_tkq = window._tkq || [];
_stq = window._stq || [];
_tkq.push(['storeContext', {'blog_id':'30930683','blog_tz':'0','user_lang':'en','blog_lang':'en','user_id':'0'}]);
_stq.push(['view', {'blog':'30930683','v':'wpcom','tz':'0','user_id':'0','post':'120','subd':'highlyscalable'}]);
_stq.push(['extra', {'crypt':'UE5XaGUuOTlwaD85flAmcm1mcmZsaDhkV11YdWtpP0NsWnVkPS9sL0ViLndld3BuVT01Unp2dX5PUD9kVlt0NXVbV185bCVjVi5xQjlZdX5OZ25uRkh0QS9yXWFaeF9Hb2kyM2xweUpxUk8mTX4/OHNpT3ZpUCxZTnZNR196SDg3Z0cuZ35EbktQc2tuRElWeTAvSXJmcXd2X1l2L3lSQjlvUz1NPzlqLiVuUXVFLGFTcU1wOUZUMi15Ti1yQyVdVENTVy1hVj8/Y0xmXXNhalgtQi1xNFZBcnJISVIvS3NIJXNBXVFBP1FoOXN3TFlqPSUzNmpYNmNXSSZYSHRbLGF4eHExWklxcE5TVytOWW9qQWkwMUR2SE9JX19baElWSnxCW2V3Vn4rLA=='}]);
_stq.push([ 'clickTrackerInit', '30930683', '120' ]);
	</script>
<noscript><img src="https://pixel.wp.com/b.gif?v=noscript" style="height:0px;width:0px;overflow:hidden" alt="" /></noscript>
<script>
if ( 'object' === typeof wpcom_mobile_user_agent_info ) {

	wpcom_mobile_user_agent_info.init();
	var mobileStatsQueryString = "";
	
	if( false !== wpcom_mobile_user_agent_info.matchedPlatformName )
		mobileStatsQueryString += "&x_" + 'mobile_platforms' + '=' + wpcom_mobile_user_agent_info.matchedPlatformName;
	
	if( false !== wpcom_mobile_user_agent_info.matchedUserAgentName )
		mobileStatsQueryString += "&x_" + 'mobile_devices' + '=' + wpcom_mobile_user_agent_info.matchedUserAgentName;
	
	if( wpcom_mobile_user_agent_info.isIPad() )
		mobileStatsQueryString += "&x_" + 'ipad_views' + '=' + 'views';

	if( "" != mobileStatsQueryString ) {
		new Image().src = document.location.protocol + '//pixel.wp.com/g.gif?v=wpcom-no-pv' + mobileStatsQueryString + '&baba=' + Math.random();
	}
	
}
</script>
</body>
</html>
<!--
	generated in 0.227 seconds
	149637 bytes batcached for 300 seconds
-->
